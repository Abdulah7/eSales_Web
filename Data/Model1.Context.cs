//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace eProdajaServis.Data
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class PEPEntities : DbContext
    {
        public PEPEntities()
            : base("name=PEPEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<Dijelovi> Dijelovi { get; set; }
        public DbSet<IzvrseneUsluge> IzvrseneUsluge { get; set; }
        public DbSet<Korisnici> Korisnici { get; set; }
        public DbSet<Kupci> Kupci { get; set; }
        public DbSet<Model> Model { get; set; }
        public DbSet<NacinPlacanja> NacinPlacanja { get; set; }
        public DbSet<Narudzba> Narudzba { get; set; }
        public DbSet<NarudzbaStavke> NarudzbaStavke { get; set; }
        public DbSet<Ocjene> Ocjene { get; set; }
        public DbSet<Proizvodjac> Proizvodjac { get; set; }
        public DbSet<Racun> Racun { get; set; }
        public DbSet<SalonServis> SalonServis { get; set; }
        public DbSet<sysdiagrams> sysdiagrams { get; set; }
        public DbSet<UgradjeniDijelovi> UgradjeniDijelovi { get; set; }
        public DbSet<Usluge> Usluge { get; set; }
        public DbSet<Vozilo> Vozilo { get; set; }
    
        public virtual ObjectResult<Vozilo> ALLCars(string ime)
        {
            var imeParameter = ime != null ?
                new ObjectParameter("ime", ime) :
                new ObjectParameter("ime", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Vozilo>("ALLCars", imeParameter);
        }
    
        public virtual ObjectResult<Vozilo> ALLCars(string ime, MergeOption mergeOption)
        {
            var imeParameter = ime != null ?
                new ObjectParameter("ime", ime) :
                new ObjectParameter("ime", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Vozilo>("ALLCars", mergeOption, imeParameter);
        }
    
        public virtual int BrisanjeAuta(Nullable<int> autoId)
        {
            var autoIdParameter = autoId.HasValue ?
                new ObjectParameter("autoId", autoId) :
                new ObjectParameter("autoId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("BrisanjeAuta", autoIdParameter);
        }
    
        public virtual int BrisiNarudzbe(Nullable<int> narudzbaID)
        {
            var narudzbaIDParameter = narudzbaID.HasValue ?
                new ObjectParameter("NarudzbaID", narudzbaID) :
                new ObjectParameter("NarudzbaID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("BrisiNarudzbe", narudzbaIDParameter);
        }
    
        public virtual int BrisiNarudzbeStavke(Nullable<int> narudzbastavkeID)
        {
            var narudzbastavkeIDParameter = narudzbastavkeID.HasValue ?
                new ObjectParameter("NarudzbastavkeID", narudzbastavkeID) :
                new ObjectParameter("NarudzbastavkeID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("BrisiNarudzbeStavke", narudzbastavkeIDParameter);
        }
    
        public virtual int DeleteKupac(Nullable<int> kupacId)
        {
            var kupacIdParameter = kupacId.HasValue ?
                new ObjectParameter("KupacId", kupacId) :
                new ObjectParameter("KupacId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteKupac", kupacIdParameter);
        }
    
        public virtual int DijeloviDelete(Nullable<int> dijeloviID)
        {
            var dijeloviIDParameter = dijeloviID.HasValue ?
                new ObjectParameter("dijeloviID", dijeloviID) :
                new ObjectParameter("dijeloviID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DijeloviDelete", dijeloviIDParameter);
        }
    
        public virtual ObjectResult<Dijelovi> DijeloviSearch(string naziv)
        {
            var nazivParameter = naziv != null ?
                new ObjectParameter("naziv", naziv) :
                new ObjectParameter("naziv", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Dijelovi>("DijeloviSearch", nazivParameter);
        }
    
        public virtual ObjectResult<Dijelovi> DijeloviSearch(string naziv, MergeOption mergeOption)
        {
            var nazivParameter = naziv != null ?
                new ObjectParameter("naziv", naziv) :
                new ObjectParameter("naziv", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Dijelovi>("DijeloviSearch", mergeOption, nazivParameter);
        }
    
        public virtual ObjectResult<GETDIJELOVE_Result> GETDIJELOVE(string naziv, Nullable<int> offset, Nullable<int> maxRows, ObjectParameter totalRows)
        {
            var nazivParameter = naziv != null ?
                new ObjectParameter("Naziv", naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var offsetParameter = offset.HasValue ?
                new ObjectParameter("Offset", offset) :
                new ObjectParameter("Offset", typeof(int));
    
            var maxRowsParameter = maxRows.HasValue ?
                new ObjectParameter("MaxRows", maxRows) :
                new ObjectParameter("MaxRows", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GETDIJELOVE_Result>("GETDIJELOVE", nazivParameter, offsetParameter, maxRowsParameter, totalRows);
        }
    
        public virtual ObjectResult<Dijelovi> GETDijeloviID(Nullable<int> dioID)
        {
            var dioIDParameter = dioID.HasValue ?
                new ObjectParameter("dioID", dioID) :
                new ObjectParameter("dioID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Dijelovi>("GETDijeloviID", dioIDParameter);
        }
    
        public virtual ObjectResult<Dijelovi> GETDijeloviID(Nullable<int> dioID, MergeOption mergeOption)
        {
            var dioIDParameter = dioID.HasValue ?
                new ObjectParameter("dioID", dioID) :
                new ObjectParameter("dioID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Dijelovi>("GETDijeloviID", mergeOption, dioIDParameter);
        }
    
        public virtual ObjectResult<Vozilo> GEtALLAuta()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Vozilo>("GEtALLAuta");
        }
    
        public virtual ObjectResult<Vozilo> GEtALLAuta(MergeOption mergeOption)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Vozilo>("GEtALLAuta", mergeOption);
        }
    
        public virtual ObjectResult<Narudzba> GEtNarudzbaID(Nullable<int> idnarudzba)
        {
            var idnarudzbaParameter = idnarudzba.HasValue ?
                new ObjectParameter("Idnarudzba", idnarudzba) :
                new ObjectParameter("Idnarudzba", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Narudzba>("GEtNarudzbaID", idnarudzbaParameter);
        }
    
        public virtual ObjectResult<Narudzba> GEtNarudzbaID(Nullable<int> idnarudzba, MergeOption mergeOption)
        {
            var idnarudzbaParameter = idnarudzba.HasValue ?
                new ObjectParameter("Idnarudzba", idnarudzba) :
                new ObjectParameter("Idnarudzba", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Narudzba>("GEtNarudzbaID", mergeOption, idnarudzbaParameter);
        }
    
        public virtual ObjectResult<Dijelovi> GEtNazivDijelovaALl(string naziv)
        {
            var nazivParameter = naziv != null ?
                new ObjectParameter("naziv", naziv) :
                new ObjectParameter("naziv", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Dijelovi>("GEtNazivDijelovaALl", nazivParameter);
        }
    
        public virtual ObjectResult<Dijelovi> GEtNazivDijelovaALl(string naziv, MergeOption mergeOption)
        {
            var nazivParameter = naziv != null ?
                new ObjectParameter("naziv", naziv) :
                new ObjectParameter("naziv", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Dijelovi>("GEtNazivDijelovaALl", mergeOption, nazivParameter);
        }
    
        public virtual ObjectResult<NarudzbaStavke> GetAllStavke()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<NarudzbaStavke>("GetAllStavke");
        }
    
        public virtual ObjectResult<NarudzbaStavke> GetAllStavke(MergeOption mergeOption)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<NarudzbaStavke>("GetAllStavke", mergeOption);
        }
    
        public virtual ObjectResult<Kupci> GetKupacIME(string ime)
        {
            var imeParameter = ime != null ?
                new ObjectParameter("ime", ime) :
                new ObjectParameter("ime", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Kupci>("GetKupacIME", imeParameter);
        }
    
        public virtual ObjectResult<Kupci> GetKupacIME(string ime, MergeOption mergeOption)
        {
            var imeParameter = ime != null ?
                new ObjectParameter("ime", ime) :
                new ObjectParameter("ime", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Kupci>("GetKupacIME", mergeOption, imeParameter);
        }
    
        public virtual ObjectResult<Vozilo> GetVoziloID(Nullable<int> voziloID)
        {
            var voziloIDParameter = voziloID.HasValue ?
                new ObjectParameter("VoziloID", voziloID) :
                new ObjectParameter("VoziloID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Vozilo>("GetVoziloID", voziloIDParameter);
        }
    
        public virtual ObjectResult<Vozilo> GetVoziloID(Nullable<int> voziloID, MergeOption mergeOption)
        {
            var voziloIDParameter = voziloID.HasValue ?
                new ObjectParameter("VoziloID", voziloID) :
                new ObjectParameter("VoziloID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Vozilo>("GetVoziloID", mergeOption, voziloIDParameter);
        }
    
        public virtual int InsertDijelove(string naziv, string model, string zalihe, Nullable<double> cijena)
        {
            var nazivParameter = naziv != null ?
                new ObjectParameter("naziv", naziv) :
                new ObjectParameter("naziv", typeof(string));
    
            var modelParameter = model != null ?
                new ObjectParameter("model", model) :
                new ObjectParameter("model", typeof(string));
    
            var zaliheParameter = zalihe != null ?
                new ObjectParameter("zalihe", zalihe) :
                new ObjectParameter("zalihe", typeof(string));
    
            var cijenaParameter = cijena.HasValue ?
                new ObjectParameter("cijena", cijena) :
                new ObjectParameter("cijena", typeof(double));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertDijelove", nazivParameter, modelParameter, zaliheParameter, cijenaParameter);
        }
    
        public virtual int InsertModel(Nullable<int> proizovjdac, string naziv, string tip, Nullable<int> kolicina)
        {
            var proizovjdacParameter = proizovjdac.HasValue ?
                new ObjectParameter("proizovjdac", proizovjdac) :
                new ObjectParameter("proizovjdac", typeof(int));
    
            var nazivParameter = naziv != null ?
                new ObjectParameter("naziv", naziv) :
                new ObjectParameter("naziv", typeof(string));
    
            var tipParameter = tip != null ?
                new ObjectParameter("tip", tip) :
                new ObjectParameter("tip", typeof(string));
    
            var kolicinaParameter = kolicina.HasValue ?
                new ObjectParameter("kolicina", kolicina) :
                new ObjectParameter("kolicina", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertModel", proizovjdacParameter, nazivParameter, tipParameter, kolicinaParameter);
        }
    
        public virtual int InsertProizvodjac(string naziv, string adresa, string telefon, string email)
        {
            var nazivParameter = naziv != null ?
                new ObjectParameter("naziv", naziv) :
                new ObjectParameter("naziv", typeof(string));
    
            var adresaParameter = adresa != null ?
                new ObjectParameter("Adresa", adresa) :
                new ObjectParameter("Adresa", typeof(string));
    
            var telefonParameter = telefon != null ?
                new ObjectParameter("Telefon", telefon) :
                new ObjectParameter("Telefon", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertProizvodjac", nazivParameter, adresaParameter, telefonParameter, emailParameter);
        }
    
        public virtual int InsertRacun(Nullable<int> servisid, string opis, Nullable<double> cijena, string komenatar, Nullable<double> pdv, Nullable<double> ukupno, string nacinisporuke, Nullable<System.DateTime> datumFa, Nullable<System.DateTime> datumI, Nullable<int> placanje)
        {
            var servisidParameter = servisid.HasValue ?
                new ObjectParameter("servisid", servisid) :
                new ObjectParameter("servisid", typeof(int));
    
            var opisParameter = opis != null ?
                new ObjectParameter("Opis", opis) :
                new ObjectParameter("Opis", typeof(string));
    
            var cijenaParameter = cijena.HasValue ?
                new ObjectParameter("cijena", cijena) :
                new ObjectParameter("cijena", typeof(double));
    
            var komenatarParameter = komenatar != null ?
                new ObjectParameter("komenatar", komenatar) :
                new ObjectParameter("komenatar", typeof(string));
    
            var pdvParameter = pdv.HasValue ?
                new ObjectParameter("Pdv", pdv) :
                new ObjectParameter("Pdv", typeof(double));
    
            var ukupnoParameter = ukupno.HasValue ?
                new ObjectParameter("ukupno", ukupno) :
                new ObjectParameter("ukupno", typeof(double));
    
            var nacinisporukeParameter = nacinisporuke != null ?
                new ObjectParameter("nacinisporuke", nacinisporuke) :
                new ObjectParameter("nacinisporuke", typeof(string));
    
            var datumFaParameter = datumFa.HasValue ?
                new ObjectParameter("datumFa", datumFa) :
                new ObjectParameter("datumFa", typeof(System.DateTime));
    
            var datumIParameter = datumI.HasValue ?
                new ObjectParameter("datumI", datumI) :
                new ObjectParameter("datumI", typeof(System.DateTime));
    
            var placanjeParameter = placanje.HasValue ?
                new ObjectParameter("Placanje", placanje) :
                new ObjectParameter("Placanje", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertRacun", servisidParameter, opisParameter, cijenaParameter, komenatarParameter, pdvParameter, ukupnoParameter, nacinisporukeParameter, datumFaParameter, datumIParameter, placanjeParameter);
        }
    
        public virtual int InsertUgradjeniDijelovi(Nullable<int> servisID, Nullable<int> dijeloviID, Nullable<int> kolicina)
        {
            var servisIDParameter = servisID.HasValue ?
                new ObjectParameter("servisID", servisID) :
                new ObjectParameter("servisID", typeof(int));
    
            var dijeloviIDParameter = dijeloviID.HasValue ?
                new ObjectParameter("DijeloviID", dijeloviID) :
                new ObjectParameter("DijeloviID", typeof(int));
    
            var kolicinaParameter = kolicina.HasValue ?
                new ObjectParameter("Kolicina", kolicina) :
                new ObjectParameter("Kolicina", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertUgradjeniDijelovi", servisIDParameter, dijeloviIDParameter, kolicinaParameter);
        }
    
        public virtual int Ocjena_insert(Nullable<int> kupacID, Nullable<int> voziloID, Nullable<int> ocjena, Nullable<System.DateTime> datum)
        {
            var kupacIDParameter = kupacID.HasValue ?
                new ObjectParameter("KupacID", kupacID) :
                new ObjectParameter("KupacID", typeof(int));
    
            var voziloIDParameter = voziloID.HasValue ?
                new ObjectParameter("VoziloID", voziloID) :
                new ObjectParameter("VoziloID", typeof(int));
    
            var ocjenaParameter = ocjena.HasValue ?
                new ObjectParameter("Ocjena", ocjena) :
                new ObjectParameter("Ocjena", typeof(int));
    
            var datumParameter = datum.HasValue ?
                new ObjectParameter("Datum", datum) :
                new ObjectParameter("Datum", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Ocjena_insert", kupacIDParameter, voziloIDParameter, ocjenaParameter, datumParameter);
        }
    
        public virtual ObjectResult<Vozilo> PretragaAuta(string naziv)
        {
            var nazivParameter = naziv != null ?
                new ObjectParameter("naziv", naziv) :
                new ObjectParameter("naziv", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Vozilo>("PretragaAuta", nazivParameter);
        }
    
        public virtual ObjectResult<Vozilo> PretragaAuta(string naziv, MergeOption mergeOption)
        {
            var nazivParameter = naziv != null ?
                new ObjectParameter("naziv", naziv) :
                new ObjectParameter("naziv", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Vozilo>("PretragaAuta", mergeOption, nazivParameter);
        }
    
        public virtual ObjectResult<Narudzba> PretragaNarudzbi(string bRNarudzba)
        {
            var bRNarudzbaParameter = bRNarudzba != null ?
                new ObjectParameter("BRNarudzba", bRNarudzba) :
                new ObjectParameter("BRNarudzba", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Narudzba>("PretragaNarudzbi", bRNarudzbaParameter);
        }
    
        public virtual ObjectResult<Narudzba> PretragaNarudzbi(string bRNarudzba, MergeOption mergeOption)
        {
            var bRNarudzbaParameter = bRNarudzba != null ?
                new ObjectParameter("BRNarudzba", bRNarudzba) :
                new ObjectParameter("BRNarudzba", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Narudzba>("PretragaNarudzbi", mergeOption, bRNarudzbaParameter);
        }
    
        public virtual ObjectResult<PretragaNarudzbi11_Result> PretragaNarudzbi11(string bRNarudzba)
        {
            var bRNarudzbaParameter = bRNarudzba != null ?
                new ObjectParameter("BRNarudzba", bRNarudzba) :
                new ObjectParameter("BRNarudzba", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PretragaNarudzbi11_Result>("PretragaNarudzbi11", bRNarudzbaParameter);
        }
    
        public virtual ObjectResult<NarudzbaStavke> PretragaNarudzbiStavki()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<NarudzbaStavke>("PretragaNarudzbiStavki");
        }
    
        public virtual ObjectResult<NarudzbaStavke> PretragaNarudzbiStavki(MergeOption mergeOption)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<NarudzbaStavke>("PretragaNarudzbiStavki", mergeOption);
        }
    
        public virtual ObjectResult<RAcunaiiiiia_Result> RAcunaiiiiia()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RAcunaiiiiia_Result>("RAcunaiiiiia");
        }
    
        public virtual ObjectResult<Racun> RacunSelectByDatum(Nullable<System.DateTime> datumP, Nullable<System.DateTime> datumI)
        {
            var datumPParameter = datumP.HasValue ?
                new ObjectParameter("datumP", datumP) :
                new ObjectParameter("datumP", typeof(System.DateTime));
    
            var datumIParameter = datumI.HasValue ?
                new ObjectParameter("datumI", datumI) :
                new ObjectParameter("datumI", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Racun>("RacunSelectByDatum", datumPParameter, datumIParameter);
        }
    
        public virtual ObjectResult<Racun> RacunSelectByDatum(Nullable<System.DateTime> datumP, Nullable<System.DateTime> datumI, MergeOption mergeOption)
        {
            var datumPParameter = datumP.HasValue ?
                new ObjectParameter("datumP", datumP) :
                new ObjectParameter("datumP", typeof(System.DateTime));
    
            var datumIParameter = datumI.HasValue ?
                new ObjectParameter("datumI", datumI) :
                new ObjectParameter("datumI", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Racun>("RacunSelectByDatum", mergeOption, datumPParameter, datumIParameter);
        }
    
        public virtual ObjectResult<Kupci> SearchKupac(string ime)
        {
            var imeParameter = ime != null ?
                new ObjectParameter("Ime", ime) :
                new ObjectParameter("Ime", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Kupci>("SearchKupac", imeParameter);
        }
    
        public virtual ObjectResult<Kupci> SearchKupac(string ime, MergeOption mergeOption)
        {
            var imeParameter = ime != null ?
                new ObjectParameter("Ime", ime) :
                new ObjectParameter("Ime", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Kupci>("SearchKupac", mergeOption, imeParameter);
        }
    
        public virtual ObjectResult<SearchVozila_Result> SearchVozila(string vozilo)
        {
            var voziloParameter = vozilo != null ?
                new ObjectParameter("vozilo", vozilo) :
                new ObjectParameter("vozilo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SearchVozila_Result>("SearchVozila", voziloParameter);
        }
    
        public virtual ObjectResult<SelectALLModele_Result> SelectALLModele()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SelectALLModele_Result>("SelectALLModele");
        }
    
        public virtual ObjectResult<SelectIDAuto_Result> SelectIDAuto(Nullable<int> modelID)
        {
            var modelIDParameter = modelID.HasValue ?
                new ObjectParameter("ModelID", modelID) :
                new ObjectParameter("ModelID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SelectIDAuto_Result>("SelectIDAuto", modelIDParameter);
        }
    
        public virtual ObjectResult<Korisnici> SelectServis()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Korisnici>("SelectServis");
        }
    
        public virtual ObjectResult<Korisnici> SelectServis(MergeOption mergeOption)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Korisnici>("SelectServis", mergeOption);
        }
    
        public virtual int Servis_IzmjenaPassworda(Nullable<int> servisID, string lozinkaSalt, string lozinkaHash)
        {
            var servisIDParameter = servisID.HasValue ?
                new ObjectParameter("ServisID", servisID) :
                new ObjectParameter("ServisID", typeof(int));
    
            var lozinkaSaltParameter = lozinkaSalt != null ?
                new ObjectParameter("LozinkaSalt", lozinkaSalt) :
                new ObjectParameter("LozinkaSalt", typeof(string));
    
            var lozinkaHashParameter = lozinkaHash != null ?
                new ObjectParameter("LozinkaHash", lozinkaHash) :
                new ObjectParameter("LozinkaHash", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Servis_IzmjenaPassworda", servisIDParameter, lozinkaSaltParameter, lozinkaHashParameter);
        }
    
        public virtual int Servis_Update(Nullable<int> servisID, string naziv, string adresa, string telefon, string email)
        {
            var servisIDParameter = servisID.HasValue ?
                new ObjectParameter("ServisID", servisID) :
                new ObjectParameter("ServisID", typeof(int));
    
            var nazivParameter = naziv != null ?
                new ObjectParameter("Naziv", naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var adresaParameter = adresa != null ?
                new ObjectParameter("Adresa", adresa) :
                new ObjectParameter("Adresa", typeof(string));
    
            var telefonParameter = telefon != null ?
                new ObjectParameter("Telefon", telefon) :
                new ObjectParameter("Telefon", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Servis_Update", servisIDParameter, nazivParameter, adresaParameter, telefonParameter, emailParameter);
        }
    
        public virtual int UgradjeniDijeloviDelete(Nullable<int> ugradjeni)
        {
            var ugradjeniParameter = ugradjeni.HasValue ?
                new ObjectParameter("ugradjeni", ugradjeni) :
                new ObjectParameter("ugradjeni", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UgradjeniDijeloviDelete", ugradjeniParameter);
        }
    
        public virtual ObjectResult<UgradjeniDijelovi> UgradjeniDijeloviPretraga()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UgradjeniDijelovi>("UgradjeniDijeloviPretraga");
        }
    
        public virtual ObjectResult<UgradjeniDijelovi> UgradjeniDijeloviPretraga(MergeOption mergeOption)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UgradjeniDijelovi>("UgradjeniDijeloviPretraga", mergeOption);
        }
    
        public virtual ObjectResult<VOZILA_MODEL_Result> VOZILA_MODEL(Nullable<int> modelID, string naziv, Nullable<int> offset, Nullable<int> maxRows, ObjectParameter totalRows)
        {
            var modelIDParameter = modelID.HasValue ?
                new ObjectParameter("ModelID", modelID) :
                new ObjectParameter("ModelID", typeof(int));
    
            var nazivParameter = naziv != null ?
                new ObjectParameter("Naziv", naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var offsetParameter = offset.HasValue ?
                new ObjectParameter("Offset", offset) :
                new ObjectParameter("Offset", typeof(int));
    
            var maxRowsParameter = maxRows.HasValue ?
                new ObjectParameter("MaxRows", maxRows) :
                new ObjectParameter("MaxRows", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VOZILA_MODEL_Result>("VOZILA_MODEL", modelIDParameter, nazivParameter, offsetParameter, maxRowsParameter, totalRows);
        }
    
        public virtual ObjectResult<Korisnici> esp_ServisSelectID(Nullable<int> servisID)
        {
            var servisIDParameter = servisID.HasValue ?
                new ObjectParameter("ServisID", servisID) :
                new ObjectParameter("ServisID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Korisnici>("esp_ServisSelectID", servisIDParameter);
        }
    
        public virtual ObjectResult<Korisnici> esp_ServisSelectID(Nullable<int> servisID, MergeOption mergeOption)
        {
            var servisIDParameter = servisID.HasValue ?
                new ObjectParameter("ServisID", servisID) :
                new ObjectParameter("ServisID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Korisnici>("esp_ServisSelectID", mergeOption, servisIDParameter);
        }
    
        public virtual ObjectResult<Korisnici> esp_select_by_Name(string name)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Korisnici>("esp_select_by_Name", nameParameter);
        }
    
        public virtual ObjectResult<Korisnici> esp_select_by_Name(string name, MergeOption mergeOption)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Korisnici>("esp_select_by_Name", mergeOption, nameParameter);
        }
    
        public virtual int esp_update_status(Nullable<int> servisID, Nullable<bool> status)
        {
            var servisIDParameter = servisID.HasValue ?
                new ObjectParameter("ServisID", servisID) :
                new ObjectParameter("ServisID", typeof(int));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("esp_update_status", servisIDParameter, statusParameter);
        }
    
        public virtual ObjectResult<Korisnici> getAllServis()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Korisnici>("getAllServis");
        }
    
        public virtual ObjectResult<Korisnici> getAllServis(MergeOption mergeOption)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Korisnici>("getAllServis", mergeOption);
        }
    
        public virtual ObjectResult<Usluge> getAllUsluge()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Usluge>("getAllUsluge");
        }
    
        public virtual ObjectResult<Usluge> getAllUsluge(MergeOption mergeOption)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Usluge>("getAllUsluge", mergeOption);
        }
    
        public virtual ObjectResult<Kupci> getIDKupac(Nullable<int> kupacID)
        {
            var kupacIDParameter = kupacID.HasValue ?
                new ObjectParameter("kupacID", kupacID) :
                new ObjectParameter("kupacID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Kupci>("getIDKupac", kupacIDParameter);
        }
    
        public virtual ObjectResult<Kupci> getIDKupac(Nullable<int> kupacID, MergeOption mergeOption)
        {
            var kupacIDParameter = kupacID.HasValue ?
                new ObjectParameter("kupacID", kupacID) :
                new ObjectParameter("kupacID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Kupci>("getIDKupac", mergeOption, kupacIDParameter);
        }
    
        public virtual ObjectResult<Narudzba> getNArudzbaHistori()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Narudzba>("getNArudzbaHistori");
        }
    
        public virtual ObjectResult<Narudzba> getNArudzbaHistori(MergeOption mergeOption)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Narudzba>("getNArudzbaHistori", mergeOption);
        }
    
        public virtual ObjectResult<Narudzba> getNArudzbaIDHistoriy(Nullable<int> narudzbaID)
        {
            var narudzbaIDParameter = narudzbaID.HasValue ?
                new ObjectParameter("narudzbaID", narudzbaID) :
                new ObjectParameter("narudzbaID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Narudzba>("getNArudzbaIDHistoriy", narudzbaIDParameter);
        }
    
        public virtual ObjectResult<Narudzba> getNArudzbaIDHistoriy(Nullable<int> narudzbaID, MergeOption mergeOption)
        {
            var narudzbaIDParameter = narudzbaID.HasValue ?
                new ObjectParameter("narudzbaID", narudzbaID) :
                new ObjectParameter("narudzbaID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Narudzba>("getNArudzbaIDHistoriy", mergeOption, narudzbaIDParameter);
        }
    
        public virtual ObjectResult<getRAcuniallFilter_Result> getRAcuniallFilter()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getRAcuniallFilter_Result>("getRAcuniallFilter");
        }
    
        public virtual ObjectResult<Narudzba> getaLLNarudzbe()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Narudzba>("getaLLNarudzbe");
        }
    
        public virtual ObjectResult<Narudzba> getaLLNarudzbe(MergeOption mergeOption)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Narudzba>("getaLLNarudzbe", mergeOption);
        }
    
        public virtual int insertIzvrseneUsluge(Nullable<int> servisID, Nullable<int> uslugaID)
        {
            var servisIDParameter = servisID.HasValue ?
                new ObjectParameter("ServisID", servisID) :
                new ObjectParameter("ServisID", typeof(int));
    
            var uslugaIDParameter = uslugaID.HasValue ?
                new ObjectParameter("UslugaID", uslugaID) :
                new ObjectParameter("UslugaID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insertIzvrseneUsluge", servisIDParameter, uslugaIDParameter);
        }
    
        public virtual int insertKupac(string ime, string prezime, Nullable<System.DateTime> datum, string email, string lozinkaH, string lozinkaSalt)
        {
            var imeParameter = ime != null ?
                new ObjectParameter("Ime", ime) :
                new ObjectParameter("Ime", typeof(string));
    
            var prezimeParameter = prezime != null ?
                new ObjectParameter("Prezime", prezime) :
                new ObjectParameter("Prezime", typeof(string));
    
            var datumParameter = datum.HasValue ?
                new ObjectParameter("Datum", datum) :
                new ObjectParameter("Datum", typeof(System.DateTime));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var lozinkaHParameter = lozinkaH != null ?
                new ObjectParameter("LozinkaH", lozinkaH) :
                new ObjectParameter("LozinkaH", typeof(string));
    
            var lozinkaSaltParameter = lozinkaSalt != null ?
                new ObjectParameter("LozinkaSalt", lozinkaSalt) :
                new ObjectParameter("LozinkaSalt", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insertKupac", imeParameter, prezimeParameter, datumParameter, emailParameter, lozinkaHParameter, lozinkaSaltParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> insertServis(string naziv, string adresa, string telefon, string email, Nullable<bool> status, string lozinkaHash, string lozinkaSalt, string imeKorisnika)
        {
            var nazivParameter = naziv != null ?
                new ObjectParameter("Naziv", naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var adresaParameter = adresa != null ?
                new ObjectParameter("Adresa", adresa) :
                new ObjectParameter("Adresa", typeof(string));
    
            var telefonParameter = telefon != null ?
                new ObjectParameter("Telefon", telefon) :
                new ObjectParameter("Telefon", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(bool));
    
            var lozinkaHashParameter = lozinkaHash != null ?
                new ObjectParameter("LozinkaHash", lozinkaHash) :
                new ObjectParameter("LozinkaHash", typeof(string));
    
            var lozinkaSaltParameter = lozinkaSalt != null ?
                new ObjectParameter("LozinkaSalt", lozinkaSalt) :
                new ObjectParameter("LozinkaSalt", typeof(string));
    
            var imeKorisnikaParameter = imeKorisnika != null ?
                new ObjectParameter("ImeKorisnika", imeKorisnika) :
                new ObjectParameter("ImeKorisnika", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("insertServis", nazivParameter, adresaParameter, telefonParameter, emailParameter, statusParameter, lozinkaHashParameter, lozinkaSaltParameter, imeKorisnikaParameter);
        }
    
        public virtual int insertUsluge(string naziv, Nullable<double> cijena, string komentar)
        {
            var nazivParameter = naziv != null ?
                new ObjectParameter("Naziv", naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var cijenaParameter = cijena.HasValue ?
                new ObjectParameter("Cijena", cijena) :
                new ObjectParameter("Cijena", typeof(double));
    
            var komentarParameter = komentar != null ?
                new ObjectParameter("Komentar", komentar) :
                new ObjectParameter("Komentar", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insertUsluge", nazivParameter, cijenaParameter, komentarParameter);
        }
    
        public virtual int insertVozilo(Nullable<int> servisID, Nullable<int> modelID, string nAZIV, string boja, string godiste, string vrstaMotora, string emisija, byte[] slika, byte[] slikaThumb, Nullable<decimal> cijena)
        {
            var servisIDParameter = servisID.HasValue ?
                new ObjectParameter("ServisID", servisID) :
                new ObjectParameter("ServisID", typeof(int));
    
            var modelIDParameter = modelID.HasValue ?
                new ObjectParameter("ModelID", modelID) :
                new ObjectParameter("ModelID", typeof(int));
    
            var nAZIVParameter = nAZIV != null ?
                new ObjectParameter("NAZIV", nAZIV) :
                new ObjectParameter("NAZIV", typeof(string));
    
            var bojaParameter = boja != null ?
                new ObjectParameter("Boja", boja) :
                new ObjectParameter("Boja", typeof(string));
    
            var godisteParameter = godiste != null ?
                new ObjectParameter("Godiste", godiste) :
                new ObjectParameter("Godiste", typeof(string));
    
            var vrstaMotoraParameter = vrstaMotora != null ?
                new ObjectParameter("VrstaMotora", vrstaMotora) :
                new ObjectParameter("VrstaMotora", typeof(string));
    
            var emisijaParameter = emisija != null ?
                new ObjectParameter("Emisija", emisija) :
                new ObjectParameter("Emisija", typeof(string));
    
            var slikaParameter = slika != null ?
                new ObjectParameter("Slika", slika) :
                new ObjectParameter("Slika", typeof(byte[]));
    
            var slikaThumbParameter = slikaThumb != null ?
                new ObjectParameter("SlikaThumb", slikaThumb) :
                new ObjectParameter("SlikaThumb", typeof(byte[]));
    
            var cijenaParameter = cijena.HasValue ?
                new ObjectParameter("Cijena", cijena) :
                new ObjectParameter("Cijena", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insertVozilo", servisIDParameter, modelIDParameter, nAZIVParameter, bojaParameter, godisteParameter, vrstaMotoraParameter, emisijaParameter, slikaParameter, slikaThumbParameter, cijenaParameter);
        }
    
        public virtual ObjectResult<pretragAuta_Result> pretragAuta(string auta)
        {
            var autaParameter = auta != null ?
                new ObjectParameter("auta", auta) :
                new ObjectParameter("auta", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pretragAuta_Result>("pretragAuta", autaParameter);
        }
    
        public virtual ObjectResult<pretragaDijelova_Result> pretragaDijelova(string dio)
        {
            var dioParameter = dio != null ?
                new ObjectParameter("dio", dio) :
                new ObjectParameter("dio", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pretragaDijelova_Result>("pretragaDijelova", dioParameter);
        }
    
        public virtual ObjectResult<selectAllVozila_Result> selectAllVozila()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<selectAllVozila_Result>("selectAllVozila");
        }
    
        public virtual ObjectResult<Kupci> selectIme(string imeKorisnika)
        {
            var imeKorisnikaParameter = imeKorisnika != null ?
                new ObjectParameter("ImeKorisnika", imeKorisnika) :
                new ObjectParameter("ImeKorisnika", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Kupci>("selectIme", imeKorisnikaParameter);
        }
    
        public virtual ObjectResult<Kupci> selectIme(string imeKorisnika, MergeOption mergeOption)
        {
            var imeKorisnikaParameter = imeKorisnika != null ?
                new ObjectParameter("ImeKorisnika", imeKorisnika) :
                new ObjectParameter("ImeKorisnika", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Kupci>("selectIme", mergeOption, imeKorisnikaParameter);
        }
    
        public virtual ObjectResult<Korisnici> selectKorisnickoIme(string imeKorisnika)
        {
            var imeKorisnikaParameter = imeKorisnika != null ?
                new ObjectParameter("ImeKorisnika", imeKorisnika) :
                new ObjectParameter("ImeKorisnika", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Korisnici>("selectKorisnickoIme", imeKorisnikaParameter);
        }
    
        public virtual ObjectResult<Korisnici> selectKorisnickoIme(string imeKorisnika, MergeOption mergeOption)
        {
            var imeKorisnikaParameter = imeKorisnika != null ?
                new ObjectParameter("ImeKorisnika", imeKorisnika) :
                new ObjectParameter("ImeKorisnika", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Korisnici>("selectKorisnickoIme", mergeOption, imeKorisnikaParameter);
        }
    
        public virtual ObjectResult<Kupci> selectKupacKorisinickoIme(string ime)
        {
            var imeParameter = ime != null ?
                new ObjectParameter("ime", ime) :
                new ObjectParameter("ime", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Kupci>("selectKupacKorisinickoIme", imeParameter);
        }
    
        public virtual ObjectResult<Kupci> selectKupacKorisinickoIme(string ime, MergeOption mergeOption)
        {
            var imeParameter = ime != null ?
                new ObjectParameter("ime", ime) :
                new ObjectParameter("ime", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Kupci>("selectKupacKorisinickoIme", mergeOption, imeParameter);
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual int updateNarudzba(Nullable<int> narudzbaID, Nullable<bool> izmjena)
        {
            var narudzbaIDParameter = narudzbaID.HasValue ?
                new ObjectParameter("narudzbaID", narudzbaID) :
                new ObjectParameter("narudzbaID", typeof(int));
    
            var izmjenaParameter = izmjena.HasValue ?
                new ObjectParameter("izmjena", izmjena) :
                new ObjectParameter("izmjena", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("updateNarudzba", narudzbaIDParameter, izmjenaParameter);
        }
    
        public virtual int updateNarudzbaStatus(Nullable<int> narudzbaID, Nullable<bool> izmjena)
        {
            var narudzbaIDParameter = narudzbaID.HasValue ?
                new ObjectParameter("narudzbaID", narudzbaID) :
                new ObjectParameter("narudzbaID", typeof(int));
    
            var izmjenaParameter = izmjena.HasValue ?
                new ObjectParameter("izmjena", izmjena) :
                new ObjectParameter("izmjena", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("updateNarudzbaStatus", narudzbaIDParameter, izmjenaParameter);
        }
    
        public virtual ObjectResult<vijezba_Result> vijezba()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<vijezba_Result>("vijezba");
        }
    }
}
